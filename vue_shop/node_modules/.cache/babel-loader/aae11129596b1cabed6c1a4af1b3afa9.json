{"remainingRequest":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\src\\components\\power\\Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\src\\components\\power\\Roles.vue","mtime":1643298577734},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\babel.config.js","mtime":1642786476000},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642648944000},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1642648952000},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642648944000},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1642648952000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOlxcVXNlcnNcXHpob3V0YW9cXERlc2t0b3BcXGhvdXRhaVxcdnVlX3Nob3BcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXHRvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcemhvdXRhb1xcRGVza3RvcFxcaG91dGFpXFx2dWVfc2hvcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+aJgOacieinkuiJsuWIl+ihqOaVsOaNrgogICAgICByb2xlbGlzdDogW10sCiAgICAgIC8v5omA5pyJ6KeS6Imy5p2D6ZmQ5pWw5o2uCiAgICAgIHJpZ2h0c2xpc3Q6IFtdLAogICAgICAvL+S/neWtmOeCueWHu+WIhumFjeadg+mZkOeahGlkCiAgICAgIHJvbGVJZDogJycsCiAgICAgIC8v5qCR5b2i5o6n5Lu255qE57uR5a6a5a+56LGhCiAgICAgIHRyZWVQcm9wczogewogICAgICAgIC8vYXV0aE5hbWUg5p2D6ZmQ6K+05piOCiAgICAgICAgbGFiZWw6ICJhdXRoTmFtZSIsCiAgICAgICAgLy/lnKjpgqPkuKrph4zpnaLltYzlpZcKICAgICAgICBjaGlsZHJlbjogImNoaWxkcmVuIgogICAgICB9LAogICAgICAvL+agkeW9ouaOp+S7tueahOiKgueCuem7mOiupOWLvumAieeahAogICAgICBkZWZrZXlzOiBbXSwKICAgICAgLy/mjqfliLbmt7vliqDop5LoibLlr7nor53moYbmmL7npLrpmpDol48KICAgICAgYWRkUm9sZXNWaXNpYmxlOiBmYWxzZSwKICAgICAgLy/mjqfliLbnvJbovpHop5LoibLlr7nor53moYbmmL7npLrpmpDol48KICAgICAgZWRpdFJvbGVzVmlzaWJsZTogZmFsc2UsCiAgICAgIC8v5o6n5Yi25YiG6YWN6KeS6Imy5p2D6ZmQ5a+56K+d5qGG5pi+56S66ZqQ6JePCiAgICAgIHNldFJpZ2h0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIC8v5re75Yqg55So5oi36KGo5Y2V5pWw5o2uCiAgICAgIGFkZFJvbGVzRm9ybTogewogICAgICAgIHJvbGVOYW1lOiAiIiwKICAgICAgICByb2xlRGVzYzogIiIKICAgICAgfSwKICAgICAgLy/liJvlu7rkuIDkuKrkv53lrZjnvJbovpHnmoTooajljZXmlbDmja4KICAgICAgZWRpdFJvbGVzRm9ybToge30sCiAgICAgIC8v5L+u5pS56KGo5Y2V55qE6aqM6K+B6KeE5YiZ5a+56LGhCiAgICAgIGFkZFJvbGVzRm9ybVJ1bGVzOiB7CiAgICAgICAgcm9sZU5hbWU6IFsvL3RyaWdnZXI6ICJibHVyIuWkseWOu+eEpueCuQogICAgICAgIHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeinkuiJsuWQjSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDIsCiAgICAgICAgICBtYXg6IDEwLAogICAgICAgICAgbWVzc2FnZTogIuinkuiJsuWQjeeahOmVv+W6puWcqDJ+MTDkuKrlrZfnrKbkuYvpl7QiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcm9sZURlc2M6IFsvL3RyaWdnZXI6ICJibHVyIuWkseWOu+eEpueCuQogICAgICAgIHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIua3u+WKoOinkuiJsuaPj+i/sCIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDAsCiAgICAgICAgICBtYXg6IDUwLAogICAgICAgICAgbWVzc2FnZTogIuinkuiJsuaPj+i/sOWQjeeahOmVv+W6puWcqDB+NTDkuKrlrZfnrKbkuYvpl7QiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFJvbGVzTGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy/ojrflj5bmiYDmnInnmoTop5LoibLliJfooagKICAgIGdldFJvbGVzTGlzdDogZnVuY3Rpb24gZ2V0Um9sZXNMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3lpZWxkJF90aGlzJCRodHRwJGdlLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRodHRwLmdldCgicm9sZXMiKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzJCRodHRwJGdlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpcyQkaHR0cCRnZS5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoIuiOt+WPluWIl+ihqOWksei0pSIpKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3RoaXMucm9sZWxpc3QgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnJvbGVsaXN0KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5qC55o2uaWTliKDpmaTlr7nlupTnmoTop5LoibLkv6Hmga8KICAgIHJlbW92ZVJvbGVzQnlJZDogZnVuY3Rpb24gcmVtb3ZlUm9sZXNCeUlkKGlkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbmZpcm1SZXN1bHQsIF95aWVsZCRfdGhpczIkJGh0dHAkZCwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coaWQpOyAvL+W8ueahhuaPkOekugoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGNvbmZpcm0oIuatpOaTjeS9nOWwhuawuOS5heWIoOmZpOivpeeUqOaItywg5piv5ZCm57un57utPyIsICLmj5DnpLoiLCB7CiAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIgogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgICAgICByZXR1cm4gZXJyOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbmZpcm1SZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8v5aaC5p6c56Gu6K6k5Yig6ZmkIOi/lOWbnmNvbmZpcm0KICAgICAgICAgICAgICAgIC8v5Y+W5raI5Yig6ZmkIOi/lOWbnmNhbmNlbAogICAgICAgICAgICAgICAgY29uc29sZS5sb2coY29uZmlybVJlc3VsdCk7CgogICAgICAgICAgICAgICAgaWYgKCEoY29uZmlybVJlc3VsdCAhPT0gImNvbmZpcm0iKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfdGhpczIuJG1lc3NhZ2UuaW5mbygi5bey57uP5Y+W5raI5Yig6ZmkIikpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRodHRwLmRlbGV0ZSgicm9sZXMvIiArIGlkKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzMiQkaHR0cCRkID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMyJCRodHRwJGQuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCLliKDpmaTnlKjmiLflpLHotKUiKSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICAvL+aIkOWKn+W8ueWHugogICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MoIuWIoOmZpOeUqOaIt+aIkOWKnyIpOyAvL+mHjeaWsOiOt+WPlueUqOaIt+WIl+ihqAoKCiAgICAgICAgICAgICAgICBfdGhpczIuZ2V0Um9sZXNMaXN0KCk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDngrnlh7vmjInpkq7mt7vliqDmlrDnlKjmiLcKICAgIGFkZFJvbGVzOiBmdW5jdGlvbiBhZGRSb2xlcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmFkZFJvbGVzRm9ybVJlZi52YWxpZGF0ZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTModmFsaWQpIHsKICAgICAgICAgIHZhciBfeWllbGQkX3RoaXMzJCRodHRwJHAsIHJlczsKCiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kaHR0cC5wb3N0KCJyb2xlcyIsIF90aGlzMy5hZGRSb2xlc0Zvcm0pOwoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzMyQkaHR0cCRwID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczMkJGh0dHAkcC5kYXRhOwoKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cyAhPT0gMjAxKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLmVycm9yKCLmt7vliqDnlKjmiLflpLHotKUiKTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoIua3u+WKoOeUqOaIt+aIkOWKnyIpOyAvL+WvueivneahhumakOiXjwoKCiAgICAgICAgICAgICAgICAgIF90aGlzMy5hZGREaWFsb2dWaXNpYmxlID0gZmFsc2U7IC8v6YeN5paw6I635Y+W55So5oi35YiX6KGoCgogICAgICAgICAgICAgICAgICBfdGhpczMuZ2V0Um9sZXNMaXN0KCk7CgogICAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICAgIH0pKTsKCiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpOwogICAgfSwKICAgIC8v5re75Yqg6KeS6Imy5a+56K+d5qGG5YWz6Zet5LqL5Lu2CiAgICBhZGRSb2xlc0RpYWxvZ0Nsb3NlZDogZnVuY3Rpb24gYWRkUm9sZXNEaWFsb2dDbG9zZWQoKSB7CiAgICAgIC8vcmVzZXRGaWVsZHPlr7nmlbTkuKrooajljZXov5vooYzph43nva7vvIzlsIbmiYDmnInlrZfmrrXlgLzph43nva7kuLrliJ3lp4vlgLzlubbnp7vpmaTmoKHpqoznu5PmnpwKICAgICAgdGhpcy4kcmVmcy5hZGRSb2xlc0Zvcm1SZWYucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICAvL+ebkeWQrOS/ruaUueinkuiJsuWvueivneahhueahOWFs+mXreS6i+S7tgogICAgZWRpdFJvbGVzRGlhbG9nQ2xvc2VkOiBmdW5jdGlvbiBlZGl0Um9sZXNEaWFsb2dDbG9zZWQoKSB7CiAgICAgIC8vIHJlc2V0RmllbGRzCeWvueaVtOS4quihqOWNlei/m+ihjOmHjee9ru+8jOWwhuaJgOacieWtl+auteWAvOmHjee9ruS4uuWIneWni+WAvOW5tuenu+mZpOagoemqjOe7k+aenAogICAgICB0aGlzLiRyZWZzLmVkaXRSb2xlc0Zvcm1SZWYucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICAvLyDlsZXnpLrnvJbovpHop5LoibLnmoTlr7nor53moYYKICAgIHNob3dFZGl0RGlhbG9nOiBmdW5jdGlvbiBzaG93RWRpdERpYWxvZyhpZCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBfeWllbGQkX3RoaXM0JCRodHRwJGcsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzNC5lZGl0Um9sZXNWaXNpYmxlID0gdHJ1ZTsgLy8g5qC55o2uIElEIOafpeivoueUqOaIt+S/oeaBrwoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczQuJGh0dHAuZ2V0KCJyb2xlcy8iICsgaWQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXM0JCRodHRwJGcgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczQkJGh0dHAkZy5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIF90aGlzNC4kbWVzc2FnZS5lcnJvcigi5p+l6K+i55So5oi35aSx6LSlIikpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpczQuZWRpdFJvbGVzRm9ybSA9IHJlcy5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIjExMTExMTExMTEiLCBfdGhpczQuZWRpdFJvbGVzRm9ybS5yb2xlSWQpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL+S/ruaUueinkuiJsuS/oeaBr+W5tuS4lOaPkOS6pAogICAgZWRpdFJvbGVzOiBmdW5jdGlvbiBlZGl0Um9sZXMoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5lZGl0Um9sZXNGb3JtUmVmLnZhbGlkYXRlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUodmFsaWQpIHsKICAgICAgICAgIHZhciBfeWllbGQkX3RoaXM1JCRodHRwJHAsIHJlczsKCiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAvL+aJk+WNsOS4unRydWUs6KGo56S65qC85byP5qCh6aqM6aqM6K+B6YCa6L+HCiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzNS5lZGl0Um9sZXNGb3JtKTsgLy8gY29uc29sZS5sb2codmFsaWQpCiAgICAgICAgICAgICAgICAgIC8vIC8v5LiN6YCa6L+H55u05o6l57uT5p2fCgogICAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS4kaHR0cC5wdXQoInJvbGVzLyIgKyBfdGhpczUuZWRpdFJvbGVzRm9ybS5yb2xlSWQsIHsKICAgICAgICAgICAgICAgICAgICByb2xlTmFtZTogX3RoaXM1LmVkaXRSb2xlc0Zvcm0ucm9sZU5hbWUsCiAgICAgICAgICAgICAgICAgICAgcm9sZURlc2M6IF90aGlzNS5lZGl0Um9sZXNGb3JtLnJvbGVEZXNjCiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNSQkaHR0cCRwID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczUkJGh0dHAkcC5kYXRhOwogICAgICAgICAgICAgICAgICAvL+WFiOWIpOaWreWTjeW6lOaIkOWKn+ayoeaciQogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMucm9sZU5hbWUpOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMucm9sZURlc2MpOwoKICAgICAgICAgICAgICAgICAgaWYgKCEocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF90aGlzNS4kbWVzc2FnZS5lcnJvcigi5pu05paw55So5oi35L+h5oGv5aSx6LSlIikpOwoKICAgICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICAgIC8v5ZON5bqU5oiQ5Yqf5LmL5ZCOCiAgICAgICAgICAgICAgICAgIC8v5YWz6Zet5a+56K+d5qGGIOWIt+aWsOaVsOaNruihqCDmj5DnpLrkv67mlLnmiJDlip8KICAgICAgICAgICAgICAgICAgX3RoaXM1LmVkaXRSb2xlc1Zpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICAgIF90aGlzNS5nZXRSb2xlc0xpc3QoKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5zdWNjZXNzKCLmm7TmlrDnlKjmiLfkv6Hmga/miJDlip8iKTsKCiAgICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKTsKICAgIH0sCiAgICAvL+agueaNrmlk5Yig6Zmk5a+55bqU55qE5p2D6ZmQCiAgICAvL3JvbGUg6KeS6ImyICAgaWQzIOadg+mZkCBJRAogICAgLy/liKDpmaTmjIflrprnmoTop5LoibLnmoRpZAogICAgcmVtb3ZlUmlnaHRCeUlkOiBmdW5jdGlvbiByZW1vdmVSaWdodEJ5SWQocm9sZSwgcmlnaHRJZCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KCkgewogICAgICAgIHZhciBjb25maXJtUmVzdWx0LCBfeWllbGQkX3RoaXM2JCRodHRwJGQsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJvbGUsIHJpZ2h0SWQpOyAvL+W8ueahhuaPkOekugoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczYuJGNvbmZpcm0oIuatpOaTjeS9nOWwhuawuOS5heWIoOmZpOivpeeUqOaItywg5piv5ZCm57un57utPyIsICLmj5DnpLoiLCB7CiAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwKICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIgogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgICAgICByZXR1cm4gZXJyOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbmZpcm1SZXN1bHQgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgICAgIC8v5aaC5p6c56Gu6K6k5Yig6ZmkIOi/lOWbnmNvbmZpcm0KICAgICAgICAgICAgICAgIC8v5Y+W5raI5Yig6ZmkIOi/lOWbnmNhbmNlbAogICAgICAgICAgICAgICAgY29uc29sZS5sb2coY29uZmlybVJlc3VsdCk7CgogICAgICAgICAgICAgICAgaWYgKCEoY29uZmlybVJlc3VsdCAhPT0gImNvbmZpcm0iKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCBfdGhpczYuJG1lc3NhZ2UuaW5mbygi5bey57uP5Y+W5raI5Yig6ZmkIikpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM2LiRodHRwLmRlbGV0ZSgicm9sZXMvIi5jb25jYXQocm9sZS5pZCwgIi9yaWdodHMvIikuY29uY2F0KHJpZ2h0SWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNiQkaHR0cCRkID0gX2NvbnRleHQ2LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM2JCRodHRwJGQuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgX3RoaXM2LiRtZXNzYWdlLmVycm9yKCLliKDpmaTnlKjmiLflpLHotKUiKSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICAvL+aIkOWKn+W8ueWHugogICAgICAgICAgICAgICAgX3RoaXM2LiRtZXNzYWdlLnN1Y2Nlc3MoIuWIoOmZpOeUqOaIt+aIkOWKnyIpOyAvL+mHjeaWsOiOt+WPlueUqOaIt+WIl+ihqAogICAgICAgICAgICAgICAgLy90aGlzLmdldFJvbGVzTGlzdCgpO+S4jeaOqOiNkOWboOS4uuS7luaYr+WIt+aWsOaVtOS4qumhtemdogogICAgICAgICAgICAgICAgLy8gdGhpcy5nZXRSb2xlc0xpc3QoKTsKICAgICAgICAgICAgICAgIC8v5Zug5Li66L+U5Zue55qEZGF0YSwg5piv5b2T5YmN6KeS6Imy5LiL5pyA5paw55qE5p2D6ZmQ5pWw5o2uCiAgICAgICAgICAgICAgICAvL+inkuiJsmlk5LiL5pWw5o2u6YeN5paw5riy5p+TIHJlcy5kYXRh55So5oi35pyA5paw5pWw5o2uICAgcm9sZS5jaGlsZHJlbiDmjIflrprnlKjmiLfkuIvnmoTmlbDmja4KCgogICAgICAgICAgICAgICAgcm9sZS5jaGlsZHJlbiA9IHJlcy5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU2KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/lsZXnpLrliIbphY3mnYPpmZDnmoTlr7nor53moYYKICAgIHNob3dTZXRSaWdodERpYWxvZzogZnVuY3Rpb24gc2hvd1NldFJpZ2h0RGlhbG9nKHJvbGUpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNygpIHsKICAgICAgICB2YXIgX3lpZWxkJF90aGlzNyQkaHR0cCRnLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyb2xlKTsgLy/kv53lrZjlvZPliY3op5LoibJpZCDku6XlkI7liIbphY3mnYPpmZDlpb3nlKgKCiAgICAgICAgICAgICAgICBfdGhpczcucm9sZUlkID0gcm9sZS5pZDsgLy/ojrflj5bmiYDmnInnmoTmnYPpmZDmlbDmja4KICAgICAgICAgICAgICAgIC8v6I635Y+W55So5oi35omA5pyJ55qE5p2D6ZmQ55qE5pWw5o2uCiAgICAgICAgICAgICAgICAvL+WAvCBsaXN0IOaIliB0cmVlICwgbGlzdCDliJfooajmmL7npLrmnYPpmZAsIHRyZWUg5qCR54q25pi+56S65p2D6ZmQCgogICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNy4kaHR0cC5nZXQoInJpZ2h0cy90cmVlIik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczckJGh0dHAkZyA9IF9jb250ZXh0Ny5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzNyQkaHR0cCRnLmRhdGE7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5hYnJ1cHQoInJldHVybiIsIF90aGlzNy4kbWVzc2FnZS5lcnJvcigi6I635Y+W5YiX6KGo5aSx6LSlIikpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAvL+iOt+WPlueahOadg+mZkOaVsOaNriDnlKjnqbrmlbDnu4Tkv53lrZgKICAgICAgICAgICAgICAgIF90aGlzNy5yaWdodHNsaXN0ID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczcucmlnaHRzbGlzdCk7IC8vIOmAkuW9kuiOt+WPljPnuqfoioLngrnnmoRpZCByb2xl5b2T5YmN6KeS6ImyIHRoaXMuZGVma2V5cyBkYXRh55Sz5piO55qE56m65pWw57uECgogICAgICAgICAgICAgICAgX3RoaXM3LmdldExlYWZrZXlzKHJvbGUsIF90aGlzNy5kZWZrZXlzKTsKCiAgICAgICAgICAgICAgICBfdGhpczcuZ2V0Um9sZXNMaXN0KCk7IC8v5a+56K+d5qGG5pi+56S6CgoKICAgICAgICAgICAgICAgIF90aGlzNy5zZXRSaWdodERpYWxvZ1Zpc2libGUgPSB0cnVlOyAvL+mHjeaWsOiOt+WPlueUqOaIt+WIl+ihqAoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU3KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/nlKjpgJLlvZLnmoTlvaLlvI8s6I635Y+W6KeS6Imy5LiL6Z2i5omA5pyJ55qEM+e6p+adg+mZkOeahGlkLOW5tuS/neWtmOWIsGRlZmtleXMKICAgIC8vbm9kZSDoioLngrkgIGFyciDmlbDnu4Tkv53lrZgKICAgIGdldExlYWZrZXlzOiBmdW5jdGlvbiBnZXRMZWFma2V5cyhub2RlLCBhcnIpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CgogICAgICAvLyDliKTmlq3mr4/kuKroioLngrnmmK/lkKbmnIljaGlsZHJlbiDmsqHmnInlsLHmmK/mnIDlkI7kuIDkuKog5Lmf5bCx5piv56ysM+e6pwogICAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHsKICAgICAgICAvL2FycuihqOekuuaVsOe7hCBwdXNo5b6A5ZCO5re75YqgIG5vZGUuaWQg5bCx5piv5oul5pyJ55qEaWQKICAgICAgICByZXR1cm4gYXJyLnB1c2gobm9kZS5pZCk7CiAgICAgIH0gLy/lpoLmnpzmnIljaGlsZHJlbiDlsLHkuIDnm7Toh6rlt7HosIPoh6rlt7Eg5om+5Yiw5rKh5pyJY2hpbGRyZW7miY3nu5PmnZ8gaXRlbeiKgueCuQoKCiAgICAgIG5vZGUuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBfdGhpczguZ2V0TGVhZmtleXMoaXRlbSwgYXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgLy/op6PlhrPngrnlh7vml7blgJnmlbDnu4Tph4zpnaLnmoTlgLzntK/liqAg5YWz6Zet5a+56K+d5qGGZGVmS2V5c+S/neWtmOeahOWAvOa4hembtgogICAgLy8g55uR5ZCs5YiG6YWN5p2D6ZmQ5a+56K+d5qGG55qE5YWz6Zet5LqL5Lu2IAogICAgc2V0UmlnaHREaWFsb2dDbG9zZWQ6IGZ1bmN0aW9uIHNldFJpZ2h0RGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLmRlZmtleXMgPSBbXTsKICAgIH0sCiAgICAvL+eCueWHu+inkuiJsuWIhumFjeadg+mZkAogICAgYWxsb3RSaWdodHM6IGZ1bmN0aW9uIGFsbG90UmlnaHRzKCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KCkgewogICAgICAgIHZhciBrZXlzLCBpZFN0ciwgX3lpZWxkJF90aGlzOSQkaHR0cCRwLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyDojrflj5blt7Lnu4/pgInmi6nnmoRpZOaVsOe7hCAKICAgICAgICAgICAgICAgIC8v5Zug5Li6dGhpcy4kcmVmcy50cmVlUmVmLmdldENoZWNrZWRLZXlzKCnmmK/kuKrmlbDnu4TmiYDku6XnlKguLi7miZPlvIAKICAgICAgICAgICAgICAgIC8vIGdldENoZWNrZWRLZXlzIOiLpeiKgueCueWPr+iiq+mAieaLqe+8iOWNsyBzaG93LWNoZWNrYm94IOS4uiB0cnVl77yJ77yM5YiZ6L+U5Zue55uu5YmN6KKr6YCJ5Lit55qE6IqC54K555qEIGtleSDmiYDnu4TmiJDnmoTmlbDnu4QKICAgICAgICAgICAgICAgIC8vZ2V0SGFsZkNoZWNrZWROb2RlcyDoi6XoioLngrnlj6/ooqvpgInmi6nvvIjljbMgc2hvdy1jaGVja2JveCDkuLogdHJ1Ze+8ie+8jOWImei/lOWbnuebruWJjeWNiumAieS4reeahOiKgueCueaJgGtleee7hOaIkOeahOaVsOe7hAogICAgICAgICAgICAgICAga2V5cyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoX3RoaXM5LiRyZWZzLnRyZWVSZWYuZ2V0Q2hlY2tlZEtleXMoKSksIF90b0NvbnN1bWFibGVBcnJheShfdGhpczkuJHJlZnMudHJlZVJlZi5nZXRIYWxmQ2hlY2tlZEtleXMoKSkpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5cyk7IC8v5Lit6Ze055SoICzmi7zmjqUKCiAgICAgICAgICAgICAgICBpZFN0ciA9IGtleXMuam9pbignLCcpOyAvLyBjb25zb2xlLmxvZyhpZFN0cik7CgogICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzOS4kaHR0cC5wb3N0KCJyb2xlcy8iLmNvbmNhdChfdGhpczkucm9sZUlkLCAiL3JpZ2h0cyIpLCB7CiAgICAgICAgICAgICAgICAgIHJpZHM6IGlkU3RyCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzOSQkaHR0cCRwID0gX2NvbnRleHQ4LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM5JCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LmFicnVwdCgicmV0dXJuIiwgX3RoaXM5LiRtZXNzYWdlLmVycm9yKCLliIbphY3mnYPpmZDlpLHotKUiKSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIC8v5o+Q56S6CiAgICAgICAgICAgICAgICBfdGhpczkuJG1lc3NhZ2Uuc3VjY2Vzcygi5YiG6YWN5p2D6ZmQ5oiQ5YqfIik7IC8v5Yi35paw5YiX6KGoCgoKICAgICAgICAgICAgICAgIF90aGlzOS5nZXRSb2xlc0xpc3QoKTsgLy/lr7nor53moYbpmpDol48KCgogICAgICAgICAgICAgICAgX3RoaXM5LnNldFJpZ2h0RGlhbG9nVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU4KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <!-- 添加角色按钮区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"addRolesVisible = true\"\r\n            >添加角色</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 角色列表区域 -->\r\n      <el-table :data=\"rolelist\" border stripe>\r\n        <!-- 展开列 -->\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- json数据格式化展示时用过我认为就是可以识别\\n\\t等转义字符 -->\r\n            <!-- :class=\"['bdbottom']  每一行都绑定  i1===0 就是第一个位置 加上顶部边框线-->\r\n            <el-row\r\n              v-for=\"(item1, i1) in scope.row.children\"\r\n              :key=\"item1.id\"\r\n              :class=\"['bdbottom', i1 === 0 ? 'bdtop' : '', 'vcenter']\"\r\n            >\r\n              <!-- 渲染一级权限 -->\r\n              <el-col :span=\"5\">\r\n                <el-tag\r\n                  closable\r\n                  @close=\"removeRightById(scope.row, item1.id)\"\r\n                  >{{ item1.authName }}</el-tag\r\n                >\r\n                <i class=\"el-icon-caret-right\"></i>\r\n              </el-col>\r\n              <!-- 渲染一级到3级权限 -->\r\n              <el-col :span=\"19\">\r\n                <!-- 通过for渲染二级权限 -->\r\n                <el-row\r\n                  v-for=\"(item2, i2) in item1.children\"\r\n                  :key=\"item2.id\"\r\n                  :class=\"[i1 === 0 ? '' : 'bdtop', 'vcenter']\"\r\n                >\r\n                  <el-col :span=\"6\">\r\n                    <el-tag\r\n                      type=\"success\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item2.id)\"\r\n                      >{{ item2.authName }}</el-tag\r\n                    >\r\n                    <i class=\"el-icon-caret-right\"></i>\r\n                  </el-col>\r\n                  <el-col :span=\"18\">\r\n                    <el-tag\r\n                      type=\"warning\"\r\n                      v-for=\"(item3, i3) in item2.children\"\r\n                      :key=\"item3.id\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item3.id)\"\r\n                    >\r\n                      {{ item3.authName }}</el-tag\r\n                    >\r\n                  </el-col>\r\n                </el-row>\r\n              </el-col>\r\n            </el-row>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"300px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 编辑按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n              size=\"mini\"\r\n              @click=\"showEditDialog(scope.row.id)\"\r\n              >编辑</el-button\r\n            >\r\n            <!-- 删除按钮 -->\r\n            <el-button\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              size=\"mini\"\r\n              @click=\"removeRolesById(scope.row.id)\"\r\n              >删除</el-button\r\n            >\r\n            <!-- 分配角色 -->\r\n            <el-button\r\n              type=\"warning\"\r\n              icon=\"el-icon-setting\"\r\n              size=\"mini\"\r\n              @click=\"showSetRightDialog(scope.row)\"\r\n              >分配权限</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 添加角色角色 -->\r\n      <el-dialog\r\n        title=\"提示\"\r\n        :visible.sync=\"addRolesVisible\"\r\n        width=\"50%\"\r\n        @close=\"addRolesDialogClosed\"\r\n      >\r\n        <el-form\r\n          :model=\"addRolesForm\"\r\n          :rules=\"addRolesFormRules\"\r\n          ref=\"addRolesFormRef\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n            <el-input v-model=\"addRolesForm.roleName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n            <el-input v-model=\"addRolesForm.roleDesc\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addRolesVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addRoles\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 编辑角色对话框 -->\r\n      <el-dialog\r\n        title=\"提示\"\r\n        :visible.sync=\"editRolesVisible\"\r\n        width=\"50%\"\r\n        @close=\"editRolesDialogClosed\"\r\n      >\r\n        <el-form\r\n          :model=\"editRolesForm\"\r\n          :rules=\"addRolesFormRules\"\r\n          ref=\"editRolesFormRef\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n            <el-input v-model=\"editRolesForm.roleName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n            <el-input v-model=\"editRolesForm.roleDesc\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editRolesVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editRoles\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分配角色权限对话框 -->\r\n      <el-dialog\r\n        title=\"分配权限\"\r\n        :visible.sync=\"setRightDialogVisible\"\r\n        width=\"50%\"\r\n         @close=\"setRightDialogClosed\"\r\n      >\r\n        <!-- 树形控件 -->\r\n        <!-- default-expand-all 是否默认展开所有节点 default-checked-keys\t默认勾选的节点的 key 的数组\r\n      show-checkbox勾选框 -->\r\n        <el-tree\r\n          :data=\"rightslist\"\r\n          :props=\"treeProps\"\r\n          show-checkbox\r\n          node-key=\"id\"\r\n          default-expand-all\r\n          :default-checked-keys=\"defkeys\"\r\n          ref=\"treeRef\"\r\n        ></el-tree>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button\r\n          >\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //所有角色列表数据\r\n      rolelist: [],\r\n      //所有角色权限数据\r\n      rightslist: [],\r\n      //保存点击分配权限的id\r\n      roleId:'',\r\n      //树形控件的绑定对象\r\n      treeProps: {\r\n        //authName 权限说明\r\n        label: \"authName\",\r\n        //在那个里面嵌套\r\n        children: \"children\",\r\n      },\r\n      //树形控件的节点默认勾选的\r\n      defkeys: [],\r\n      //控制添加角色对话框显示隐藏\r\n      addRolesVisible: false,\r\n      //控制编辑角色对话框显示隐藏\r\n      editRolesVisible: false,\r\n      //控制分配角色权限对话框显示隐藏\r\n      setRightDialogVisible: false,\r\n      //添加用户表单数据\r\n      addRolesForm: {\r\n        roleName: \"\",\r\n        roleDesc: \"\",\r\n      },\r\n      //创建一个保存编辑的表单数据\r\n      editRolesForm: {},\r\n      //修改表单的验证规则对象\r\n      addRolesFormRules: {\r\n        roleName: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入角色名\", trigger: \"blur\" },\r\n          {\r\n            min: 2,\r\n            max: 10,\r\n            message: \"角色名的长度在2~10个字符之间\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        roleDesc: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"添加角色描述\", trigger: \"blur\" },\r\n          {\r\n            min: 0,\r\n            max: 50,\r\n            message: \"角色描述名的长度在0~50个字符之间\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getRolesList();\r\n  },\r\n  methods: {\r\n    //获取所有的角色列表\r\n    async getRolesList() {\r\n      const { data: res } = await this.$http.get(\"roles\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取列表失败\");\r\n      }\r\n      this.rolelist = res.data;\r\n      console.log(this.rolelist);\r\n    },\r\n    //根据id删除对应的角色信息\r\n    async removeRolesById(id) {\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该用户, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\"roles/\" + id);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除用户失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除用户成功\");\r\n      //重新获取用户列表\r\n      this.getRolesList();\r\n    },\r\n    // 点击按钮添加新用户\r\n    addRoles() {\r\n      this.$refs.addRolesFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\"roles\", this.addRolesForm);\r\n        if (res.data.status !== 201) {\r\n          this.$message.error(\"添加用户失败\");\r\n        }\r\n        this.$message.success(\"添加用户成功\");\r\n        //对话框隐藏\r\n        this.addDialogVisible = false;\r\n        //重新获取用户列表\r\n        this.getRolesList();\r\n      });\r\n    },\r\n    //添加角色对话框关闭事件\r\n    addRolesDialogClosed() {\r\n      //resetFields对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.addRolesFormRef.resetFields();\r\n    },\r\n    //监听修改角色对话框的关闭事件\r\n    editRolesDialogClosed() {\r\n      // resetFields\t对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.editRolesFormRef.resetFields();\r\n    },\r\n    // 展示编辑角色的对话框\r\n    async showEditDialog(id) {\r\n      this.editRolesVisible = true;\r\n      // 根据 ID 查询用户信息\r\n      const { data: res } = await this.$http.get(\"roles/\" + id);\r\n      //用if进行判断 用户请求成功还是失败\r\n      if (res.meta.status != 200) {\r\n        //失败提示\r\n        return this.$message.error(\"查询用户失败\");\r\n      }\r\n      this.editRolesForm = res.data;\r\n      console.log(\"1111111111\", this.editRolesForm.roleId);\r\n    },\r\n    //修改角色信息并且提交\r\n    editRoles() {\r\n      this.$refs.editRolesFormRef.validate(async (valid) => {\r\n        //打印为true,表示格式校验验证通过\r\n        console.log(this.editRolesForm);\r\n        // console.log(valid)\r\n        // //不通过直接结束\r\n        if (!valid) return;\r\n        //通过发起修改用户信息的请求\r\n        const { data: res } = await this.$http.put(\r\n          \"roles/\" + this.editRolesForm.roleId,\r\n          {\r\n            roleName: this.editRolesForm.roleName,\r\n            roleDesc: this.editRolesForm.roleDesc,\r\n          }\r\n        );\r\n        //先判断响应成功没有\r\n        console.log(res);\r\n        console.log(res.roleName);\r\n        console.log(res.roleDesc);\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"更新用户信息失败\");\r\n        }\r\n        //响应成功之后\r\n        //关闭对话框 刷新数据表 提示修改成功\r\n        this.editRolesVisible = false;\r\n        this.getRolesList();\r\n        this.$message.success(\"更新用户信息成功\");\r\n      });\r\n    },\r\n    //根据id删除对应的权限\r\n    //role 角色   id3 权限 ID\r\n    //删除指定的角色的id\r\n    async removeRightById(role, rightId) {\r\n      console.log(role, rightId);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该用户, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\r\n        `roles/${role.id}/rights/${rightId}`\r\n      );\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除用户失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除用户成功\");\r\n      //重新获取用户列表\r\n      //this.getRolesList();不推荐因为他是刷新整个页面\r\n      // this.getRolesList();\r\n      //因为返回的data, 是当前角色下最新的权限数据\r\n      //角色id下数据重新渲染 res.data用户最新数据   role.children 指定用户下的数据\r\n      role.children = res.data;\r\n    },\r\n    //展示分配权限的对话框\r\n    async showSetRightDialog(role) {\r\n      console.log(role);\r\n      //保存当前角色id 以后分配权限好用\r\n      this.roleId=role.id\r\n      //获取所有的权限数据\r\n      //获取用户所有的权限的数据\r\n      //值 list 或 tree , list 列表显示权限, tree 树状显示权限\r\n      const { data: res } = await this.$http.get(\"rights/tree\");\r\n      if (res.meta.status !== 200) {\r\n        //提示\r\n        return this.$message.error(\"获取列表失败\");\r\n      }\r\n      //获取的权限数据 用空数组保存\r\n      this.rightslist = res.data;\r\n      console.log(this.rightslist);\r\n      // 递归获取3级节点的id role当前角色 this.defkeys data申明的空数组\r\n      this.getLeafkeys(role, this.defkeys);\r\n         this.getRolesList();\r\n      //对话框显示\r\n      this.setRightDialogVisible = true;\r\n       //重新获取用户列表\r\n\r\n    },\r\n    //用递归的形式,获取角色下面所有的3级权限的id,并保存到defkeys\r\n    //node 节点  arr 数组保存\r\n    getLeafkeys(node, arr) {\r\n      // 判断每个节点是否有children 没有就是最后一个 也就是第3级\r\n      if (!node.children) {\r\n        //arr表示数组 push往后添加 node.id 就是拥有的id\r\n        return arr.push(node.id);\r\n      }\r\n      //如果有children 就一直自己调自己 找到没有children才结束 item节点\r\n      node.children.forEach((item) => {\r\n        return this.getLeafkeys(item, arr);\r\n      });\r\n    },\r\n    //解决点击时候数组里面的值累加 关闭对话框defKeys保存的值清零\r\n    // 监听分配权限对话框的关闭事件 \r\n    setRightDialogClosed() {\r\n      this.defkeys= []\r\n    },\r\n    //点击角色分配权限\r\n    async allotRights(){\r\n      // 获取已经选择的id数组 \r\n      //因为this.$refs.treeRef.getCheckedKeys()是个数组所以用...打开\r\n      // getCheckedKeys 若节点可被选择（即 show-checkbox 为 true），则返回目前被选中的节点的 key 所组成的数组\r\n      //getHalfCheckedNodes 若节点可被选择（即 show-checkbox 为 true），则返回目前半选中的节点所key组成的数组\r\n      const keys=[...this.$refs.treeRef.getCheckedKeys(),...this.$refs.treeRef.getHalfCheckedKeys()]\r\n      console.log(keys);\r\n      //中间用 ,拼接\r\n      const idStr=keys.join(',')\r\n      // console.log(idStr);\r\n      const{data:res}= await this.$http.post(`roles/${this.roleId}/rights`,{rids:idStr})\r\n      if (res.meta.status !== 200) {\r\n        //提示\r\n        return this.$message.error(\"分配权限失败\");\r\n      }\r\n       //提示\r\n      this.$message.success(\"分配权限成功\");\r\n      //刷新列表\r\n       this.getRolesList();\r\n       //对话框隐藏\r\n       this.setRightDialogVisible = false\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-tag {\r\n  margin: 7px;\r\n}\r\n.bdtop {\r\n  border-top: 1px solid #eee;\r\n}\r\n.bdbottom {\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.vcenter {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n}\r\n</style>"],"sourceRoot":"src/components/power"}]}