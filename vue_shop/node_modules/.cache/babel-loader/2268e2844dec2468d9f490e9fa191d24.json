{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\src\\components\\goods\\Params.vue","mtime":1643655388826},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\babel.config.js","mtime":1644633735391},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <!-- 头部警告区域 -->\r\n      <el-alert\r\n        title=\"注意:只允许第3级分类设置相关参数!\"\r\n        type=\"warning\" show-icon :closable=\"false\"\r\n      >\r\n      </el-alert>\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类分类:</span>\r\n          <!-- 级联选择框 -->\r\n          <!-- options用来指定数据源 :props指定了配置对象 -->\r\n          <el-cascader\r\n           :options=\"catelist\" :props=\"cateProps\"\r\n            v-model=\"selectedCateKeys\" @change=\"handleChange\">\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加按钮 -->\r\n           <el-button type=\"primary\" size=\"mini\" :disabled=\" isBtnDisabled\"\r\n           @click=\"addDialogVisible = true\"> 添加参数</el-button>\r\n           <!-- 动态参数表格 -->\r\n           <el-table :data='manyTableData' border stripe>\r\n             <!-- 展开列 -->\r\n             <el-table-column type=\"expand\">\r\n               <template slot-scope=\"scope\">\r\n                 <!-- 循环渲染Tag标签 -->\r\n                 <el-tag v-for=\"(item,index) in scope.row.attr_vals\" :key=\"index\"\r\n                  closable @close='handleCleose(index,scope.row)'>\r\n                   {{item}}\r\n                 </el-tag>\r\n                 <!-- 输入框 -->\r\n                 <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                   @blur=\"handleInputConfirm(scope.row)\">\r\n                 </el-input>\r\n                 <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\"\r\n                 @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n               </template>\r\n             </el-table-column>\r\n             <!-- 索引列 -->\r\n             <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n             <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n             <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 编辑按钮 -->\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\"\r\n                size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑\r\n                </el-button>\r\n                <!-- 删除按钮 -->\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" \r\n                size=\"mini\" @click=\"removeRolesById(scope.row.attr_id)\">删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n           </el-table>\r\n          </el-tab-pane>\r\n        <!-- 静态属性 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加按钮 -->\r\n         <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\"\r\n         @click=\"addDialogVisible = true\"> 添加属性</el-button>\r\n         <!-- 静态属性表格 -->\r\n         <el-table :data='onlyTableData' border stripe>\r\n           <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n               <template slot-scope=\"scope\">\r\n                 <!-- 循环渲染Tag标签 -->\r\n                 <el-tag v-for=\"(item,index) in scope.row.attr_vals\" :key=\"index\"\r\n                  closable @close='handleCleose(index,scope.row)'>\r\n                   {{item}}\r\n                 </el-tag>\r\n                 <!-- 输入框 -->\r\n                 <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                   @blur=\"handleInputConfirm(scope.row)\">\r\n                 </el-input>\r\n                 <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\"\r\n                 @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n               </template>\r\n            </el-table-column>\r\n           <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n               <template slot-scope=\"scope\">\r\n                <!-- 编辑按钮 -->\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\"\r\n                size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑\r\n                </el-button>\r\n                <!-- 删除按钮 -->\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" \r\n                size=\"mini\" @click=\"removeRolesById(scope.row.attr_id)\">删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n         </el-table>\r\n          </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数对话框 -->\r\n    <el-dialog :title=\"'添加'+titleText\" :visible.sync=\"addDialogVisible\"\r\n     width=\"50%\" @close=\"addDialogClosed\">\r\n     <!-- 添加参数表单 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n         <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n         </el-form-item>\r\n      </el-form>\r\n       <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n         <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n       </span>\r\n   </el-dialog>\r\n   <!-- 修改参数对话框 -->\r\n    <el-dialog :title=\"'修改'+titleText\" :visible.sync=\"editDialogVisible\"\r\n     width=\"50%\" @close=\"editDialogClosed\">\r\n     <!-- 修改参数表单 -->\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n         <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n         </el-form-item>\r\n      </el-form>\r\n       <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n         <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n       </span>\r\n   </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //商品分类数据列表默认为空\r\n      catelist: [],\r\n      //指定配置对象\r\n      cateProps: {\r\n        // 指定你选择的值\r\n        value: \"cat_id\",\r\n        //  指定你看到的值\r\n        label: \"cat_name\",\r\n        //  指定父子嵌套的属性\r\n        children: \"children\",\r\n        expandTrigger: 'hover'\r\n      },\r\n      //选择的分级分类id数组\r\n      selectedCateKeys: [],\r\n      //tab页签的被选中激活'\r\n      activeName:\"many\",\r\n      //这是动态参数\r\n      manyTableData:[],\r\n      //这是静态属性的参数\r\n      onlyTableData:[],\r\n      //添加对话框显示与隐藏\r\n      addDialogVisible:false,\r\n      //修改对话框显示与隐藏\r\n      editDialogVisible:false,\r\n      //添加参数是表单数据对象\r\n      addForm:{\r\n        attr_name:''\r\n      },\r\n      //修改表单的数据对象\r\n      editForm:{},\r\n      //添加分类表单的校验规则\r\n      addFormRules: {\r\n        attr_name: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入添加分类名字\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      //修改分类表单的校验规则\r\n      editFormRules: {\r\n        attr_name: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入添加分类名字\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      this.catelist = res.data;\r\n      console.log(this.catelist);\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    async handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab页签的处理函数\r\n    handleTabClick(){\r\n      console.log(this.activeName);\r\n      this.getParamsData()\r\n    },\r\n    //获取参数列表数据\r\n    async getParamsData(){\r\n      //选中不是三级分类,清空数组\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = [];\r\n         this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return \r\n      }\r\n      //是三级分类\r\n      console.log(this.selectedCateKeys);\r\n      //根据所选分类的id和当初设置的面板,获取对应的参数\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`,{\r\n        params:{sel:this.activeName}\r\n      })\r\n      // console.log(res);\r\n      //参看获取的状态码是否为200\r\n       if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"获取参数列表失败\");\r\n      }\r\n      //获取参数成功了\r\n      console.log(res.data);\r\n       res.data.forEach(item => {\r\n         //判断里面是否有数据\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n        //要每一行都有自己的 inputVisible和inputValue\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false\r\n        // 文本框中输入的值\r\n        item.inputValue = ''\r\n        console.log(item.attr_vals);\r\n      })\r\n      //判断是哪个列表请求的参数 让相应列表使用\r\n      //如果获取的是动态参数\r\n      if(this.activeName==='many'){\r\n        this.manyTableData=res.data\r\n      }else{\r\n        this.onlyTableData=res.data\r\n      }\r\n    },\r\n    //监听添加对话框关闭事件重置表单\r\n    addDialogClosed(){\r\n      // resetFields\t对整个表单进行重置，\r\n      // 将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    //监听修改对话框关闭事件,重置表单\r\n    editDialogClosed(){\r\n      // resetFields\t对整个表单进行重置，\r\n      // 将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮添加参数\r\n    async addParams(){\r\n       this.$refs.addFormRef.validate( async valid=>{\r\n        if(!valid)return\r\n        const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`,{\r\n          attr_name:this.addForm.attr_name,\r\n          attr_sel:this.activeName\r\n        })\r\n        // 先判断响应成功没有\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加参数失败\");\r\n        }\r\n        // 响应成功之后\r\n        // 关闭对话框 刷新数据表 提示修改成功\r\n        this.addDialogVisible = false;\r\n        this.$message.success(\"添加参数成功\");\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    //点按钮展示修改的对话框\r\n     // 展示修改商品的对话框\r\n    async showEditDialog(id) {\r\n      // 根据 ID 查询用户信息\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${id}`,{\r\n        params:{attr_sel:this.activeName}\r\n      });\r\n      console.log(res);\r\n      // 用if进行判断 用户请求成功还是失败\r\n      if (res.meta.status != 200) {\r\n        // 失败提示\r\n        return this.$message.error(\"查询用户失败\");\r\n      }\r\n      this.editForm = res.data;\r\n\r\n      // console.log(\"1111111111\", this.editRolesForm.cat_name);\r\n      this.editDialogVisible = true;\r\n    },\r\n    //编辑提交按钮\r\n    editParams(){\r\n      //先拿到表单数据\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        //打印为true,表示格式校验验证通过\r\n        console.log(this.editForm);\r\n        console.log(valid)\r\n        // 不通过直接结束\r\n        if (!valid) return;\r\n        // 通过发起修改用户信息的请求\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          {\r\n            attr_name:this.editForm.attr_name,\r\n            attr_sel:this.activeName\r\n           \r\n          }\r\n        );\r\n        // 先判断响应成功没有\r\n        console.log(res);\r\n        console.log(res.cat_name);\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"修改商品参数失败\");\r\n        }\r\n        // 响应成功之后\r\n        // 关闭对话框 刷新数据表 提示修改成功\r\n        this.editRolesVisible = false;\r\n        this.$message.success(\"修改商品参数成功\");\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    // 根据id删除对应的分类信息\r\n    async removeRolesById(id) {\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该商品分类列表, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${id}`);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除该商品分类列表失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除该商品分类列表成功\");\r\n      //重新获取商品分类列表\r\n     this.getParamsData()\r\n    },\r\n    //文本框失去焦点 ,或者按下Enter都会触发\r\n     handleInputConfirm(row){\r\n      //trim去除空格\r\n      if (row.inputValue.trim().length === 0) {\r\n        // 输入框里面的值\r\n        row.inputValue = ''\r\n        //输入框隐藏\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return，则证明输入的内容，需要做后续处理\r\n      // 添加到循环数组里面 并且清空里面空格\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      //添加之后 把输入框的值清空\r\n      row.inputValue = ''\r\n      // 输入框隐藏\r\n      row.inputVisible = false\r\n      // // 需要发起请求，保存这次操作到数据库\r\n      //调用函数\r\n      this.saveAttrVals(row)\r\n    },\r\n    //编辑提交到数据库\r\n     async saveAttrVals(row){\r\n       const { data: res } = await  this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`,{\r\n        attr_name:row.attr_name,\r\n        attr_sel:row.attr_sel,\r\n        //数组要拼接回原样字符串\r\n        attr_vals:row.attr_vals.join(' '),\r\n      })\r\n      // console.log(res);\r\n      //先与返回值进行判断\r\n       if (res.meta.status !== 200) {\r\n         //失败\r\n        return this.$message.error('修改参数项失败！')\r\n      }\r\n      //成功\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    // 删除对应的参数可选项\r\n    handleCleose(index,row) {\r\n      //删除这个字符串\r\n      row.attr_vals.splice(index, 1)\r\n      //调用编辑提交到数据库的函数\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 点击按钮展现文本框\r\n    showInput(row){\r\n    //这一行文本框出现\r\n    row.inputVisible=true\r\n    // 让文本框自动获得焦点\r\n      // $nextTick 方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\r\n    this.$nextTick(_ => {\r\n          this.$refs.saveTagInput.$refs.input.focus();\r\n        });\r\n    }\r\n  },\r\n  computed: {\r\n    //如果按钮需要禁用返回true 否则false\r\n    isBtnDisabled() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true;\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    //当前选中的3级分类的id\r\n    cateId(){\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }else{\r\n        return null\r\n      }\r\n    },\r\n    //动态计算标题的文本\r\n    titleText(){\r\n      if(this.activeName==='many'){\r\n        return '动态参数'\r\n      }else{\r\n        return '静态属性'\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin-top: 15px;\r\n}\r\n.el-tag{\r\n  margin: 5px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>"],"sourceRoot":"src/components/goods"}]}