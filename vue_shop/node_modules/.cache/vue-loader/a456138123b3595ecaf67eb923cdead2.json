{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\src\\components\\goods\\Params.vue","mtime":1643655388826},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <!-- 头部警告区域 -->\r\n      <el-alert\r\n        title=\"注意:只允许第3级分类设置相关参数!\"\r\n        type=\"warning\" show-icon :closable=\"false\"\r\n      >\r\n      </el-alert>\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类分类:</span>\r\n          <!-- 级联选择框 -->\r\n          <!-- options用来指定数据源 :props指定了配置对象 -->\r\n          <el-cascader\r\n           :options=\"catelist\" :props=\"cateProps\"\r\n            v-model=\"selectedCateKeys\" @change=\"handleChange\">\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加按钮 -->\r\n           <el-button type=\"primary\" size=\"mini\" :disabled=\" isBtnDisabled\"\r\n           @click=\"addDialogVisible = true\"> 添加参数</el-button>\r\n           <!-- 动态参数表格 -->\r\n           <el-table :data='manyTableData' border stripe>\r\n             <!-- 展开列 -->\r\n             <el-table-column type=\"expand\">\r\n               <template slot-scope=\"scope\">\r\n                 <!-- 循环渲染Tag标签 -->\r\n                 <el-tag v-for=\"(item,index) in scope.row.attr_vals\" :key=\"index\"\r\n                  closable @close='handleCleose(index,scope.row)'>\r\n                   {{item}}\r\n                 </el-tag>\r\n                 <!-- 输入框 -->\r\n                 <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                   @blur=\"handleInputConfirm(scope.row)\">\r\n                 </el-input>\r\n                 <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\"\r\n                 @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n               </template>\r\n             </el-table-column>\r\n             <!-- 索引列 -->\r\n             <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n             <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n             <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 编辑按钮 -->\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\"\r\n                size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑\r\n                </el-button>\r\n                <!-- 删除按钮 -->\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" \r\n                size=\"mini\" @click=\"removeRolesById(scope.row.attr_id)\">删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n           </el-table>\r\n          </el-tab-pane>\r\n        <!-- 静态属性 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加按钮 -->\r\n         <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\"\r\n         @click=\"addDialogVisible = true\"> 添加属性</el-button>\r\n         <!-- 静态属性表格 -->\r\n         <el-table :data='onlyTableData' border stripe>\r\n           <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n               <template slot-scope=\"scope\">\r\n                 <!-- 循环渲染Tag标签 -->\r\n                 <el-tag v-for=\"(item,index) in scope.row.attr_vals\" :key=\"index\"\r\n                  closable @close='handleCleose(index,scope.row)'>\r\n                   {{item}}\r\n                 </el-tag>\r\n                 <!-- 输入框 -->\r\n                 <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                   @blur=\"handleInputConfirm(scope.row)\">\r\n                 </el-input>\r\n                 <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\"\r\n                 @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n               </template>\r\n            </el-table-column>\r\n           <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n               <template slot-scope=\"scope\">\r\n                <!-- 编辑按钮 -->\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\"\r\n                size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑\r\n                </el-button>\r\n                <!-- 删除按钮 -->\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" \r\n                size=\"mini\" @click=\"removeRolesById(scope.row.attr_id)\">删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n         </el-table>\r\n          </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数对话框 -->\r\n    <el-dialog :title=\"'添加'+titleText\" :visible.sync=\"addDialogVisible\"\r\n     width=\"50%\" @close=\"addDialogClosed\">\r\n     <!-- 添加参数表单 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n         <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n         </el-form-item>\r\n      </el-form>\r\n       <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n         <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n       </span>\r\n   </el-dialog>\r\n   <!-- 修改参数对话框 -->\r\n    <el-dialog :title=\"'修改'+titleText\" :visible.sync=\"editDialogVisible\"\r\n     width=\"50%\" @close=\"editDialogClosed\">\r\n     <!-- 修改参数表单 -->\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n         <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n         </el-form-item>\r\n      </el-form>\r\n       <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n         <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n       </span>\r\n   </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //商品分类数据列表默认为空\r\n      catelist: [],\r\n      //指定配置对象\r\n      cateProps: {\r\n        // 指定你选择的值\r\n        value: \"cat_id\",\r\n        //  指定你看到的值\r\n        label: \"cat_name\",\r\n        //  指定父子嵌套的属性\r\n        children: \"children\",\r\n        expandTrigger: 'hover'\r\n      },\r\n      //选择的分级分类id数组\r\n      selectedCateKeys: [],\r\n      //tab页签的被选中激活'\r\n      activeName:\"many\",\r\n      //这是动态参数\r\n      manyTableData:[],\r\n      //这是静态属性的参数\r\n      onlyTableData:[],\r\n      //添加对话框显示与隐藏\r\n      addDialogVisible:false,\r\n      //修改对话框显示与隐藏\r\n      editDialogVisible:false,\r\n      //添加参数是表单数据对象\r\n      addForm:{\r\n        attr_name:''\r\n      },\r\n      //修改表单的数据对象\r\n      editForm:{},\r\n      //添加分类表单的校验规则\r\n      addFormRules: {\r\n        attr_name: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入添加分类名字\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      //修改分类表单的校验规则\r\n      editFormRules: {\r\n        attr_name: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入添加分类名字\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      this.catelist = res.data;\r\n      console.log(this.catelist);\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    async handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab页签的处理函数\r\n    handleTabClick(){\r\n      console.log(this.activeName);\r\n      this.getParamsData()\r\n    },\r\n    //获取参数列表数据\r\n    async getParamsData(){\r\n      //选中不是三级分类,清空数组\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = [];\r\n         this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return \r\n      }\r\n      //是三级分类\r\n      console.log(this.selectedCateKeys);\r\n      //根据所选分类的id和当初设置的面板,获取对应的参数\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`,{\r\n        params:{sel:this.activeName}\r\n      })\r\n      // console.log(res);\r\n      //参看获取的状态码是否为200\r\n       if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"获取参数列表失败\");\r\n      }\r\n      //获取参数成功了\r\n      console.log(res.data);\r\n       res.data.forEach(item => {\r\n         //判断里面是否有数据\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n        //要每一行都有自己的 inputVisible和inputValue\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false\r\n        // 文本框中输入的值\r\n        item.inputValue = ''\r\n        console.log(item.attr_vals);\r\n      })\r\n      //判断是哪个列表请求的参数 让相应列表使用\r\n      //如果获取的是动态参数\r\n      if(this.activeName==='many'){\r\n        this.manyTableData=res.data\r\n      }else{\r\n        this.onlyTableData=res.data\r\n      }\r\n    },\r\n    //监听添加对话框关闭事件重置表单\r\n    addDialogClosed(){\r\n      // resetFields\t对整个表单进行重置，\r\n      // 将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    //监听修改对话框关闭事件,重置表单\r\n    editDialogClosed(){\r\n      // resetFields\t对整个表单进行重置，\r\n      // 将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮添加参数\r\n    async addParams(){\r\n       this.$refs.addFormRef.validate( async valid=>{\r\n        if(!valid)return\r\n        const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`,{\r\n          attr_name:this.addForm.attr_name,\r\n          attr_sel:this.activeName\r\n        })\r\n        // 先判断响应成功没有\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加参数失败\");\r\n        }\r\n        // 响应成功之后\r\n        // 关闭对话框 刷新数据表 提示修改成功\r\n        this.addDialogVisible = false;\r\n        this.$message.success(\"添加参数成功\");\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    //点按钮展示修改的对话框\r\n     // 展示修改商品的对话框\r\n    async showEditDialog(id) {\r\n      // 根据 ID 查询用户信息\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${id}`,{\r\n        params:{attr_sel:this.activeName}\r\n      });\r\n      console.log(res);\r\n      // 用if进行判断 用户请求成功还是失败\r\n      if (res.meta.status != 200) {\r\n        // 失败提示\r\n        return this.$message.error(\"查询用户失败\");\r\n      }\r\n      this.editForm = res.data;\r\n\r\n      // console.log(\"1111111111\", this.editRolesForm.cat_name);\r\n      this.editDialogVisible = true;\r\n    },\r\n    //编辑提交按钮\r\n    editParams(){\r\n      //先拿到表单数据\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        //打印为true,表示格式校验验证通过\r\n        console.log(this.editForm);\r\n        console.log(valid)\r\n        // 不通过直接结束\r\n        if (!valid) return;\r\n        // 通过发起修改用户信息的请求\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          {\r\n            attr_name:this.editForm.attr_name,\r\n            attr_sel:this.activeName\r\n           \r\n          }\r\n        );\r\n        // 先判断响应成功没有\r\n        console.log(res);\r\n        console.log(res.cat_name);\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"修改商品参数失败\");\r\n        }\r\n        // 响应成功之后\r\n        // 关闭对话框 刷新数据表 提示修改成功\r\n        this.editRolesVisible = false;\r\n        this.$message.success(\"修改商品参数成功\");\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    // 根据id删除对应的分类信息\r\n    async removeRolesById(id) {\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该商品分类列表, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${id}`);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除该商品分类列表失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除该商品分类列表成功\");\r\n      //重新获取商品分类列表\r\n     this.getParamsData()\r\n    },\r\n    //文本框失去焦点 ,或者按下Enter都会触发\r\n     handleInputConfirm(row){\r\n      //trim去除空格\r\n      if (row.inputValue.trim().length === 0) {\r\n        // 输入框里面的值\r\n        row.inputValue = ''\r\n        //输入框隐藏\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return，则证明输入的内容，需要做后续处理\r\n      // 添加到循环数组里面 并且清空里面空格\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      //添加之后 把输入框的值清空\r\n      row.inputValue = ''\r\n      // 输入框隐藏\r\n      row.inputVisible = false\r\n      // // 需要发起请求，保存这次操作到数据库\r\n      //调用函数\r\n      this.saveAttrVals(row)\r\n    },\r\n    //编辑提交到数据库\r\n     async saveAttrVals(row){\r\n       const { data: res } = await  this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`,{\r\n        attr_name:row.attr_name,\r\n        attr_sel:row.attr_sel,\r\n        //数组要拼接回原样字符串\r\n        attr_vals:row.attr_vals.join(' '),\r\n      })\r\n      // console.log(res);\r\n      //先与返回值进行判断\r\n       if (res.meta.status !== 200) {\r\n         //失败\r\n        return this.$message.error('修改参数项失败！')\r\n      }\r\n      //成功\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    // 删除对应的参数可选项\r\n    handleCleose(index,row) {\r\n      //删除这个字符串\r\n      row.attr_vals.splice(index, 1)\r\n      //调用编辑提交到数据库的函数\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 点击按钮展现文本框\r\n    showInput(row){\r\n    //这一行文本框出现\r\n    row.inputVisible=true\r\n    // 让文本框自动获得焦点\r\n      // $nextTick 方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\r\n    this.$nextTick(_ => {\r\n          this.$refs.saveTagInput.$refs.input.focus();\r\n        });\r\n    }\r\n  },\r\n  computed: {\r\n    //如果按钮需要禁用返回true 否则false\r\n    isBtnDisabled() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true;\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    //当前选中的3级分类的id\r\n    cateId(){\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }else{\r\n        return null\r\n      }\r\n    },\r\n    //动态计算标题的文本\r\n    titleText(){\r\n      if(this.activeName==='many'){\r\n        return '动态参数'\r\n      }else{\r\n        return '静态属性'\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin-top: 15px;\r\n}\r\n.el-tag{\r\n  margin: 5px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>"]}]}