{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\src\\components\\power\\Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\src\\components\\power\\Roles.vue","mtime":1643460986794},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\heimahoutai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Roles.vue","sourceRoot":"src/components/power","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <!-- 添加角色按钮区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"addRolesVisible = true\"\r\n            >添加角色</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 角色列表区域 -->\r\n      <el-table :data=\"rolelist\" border stripe>\r\n        <!-- 展开列 -->\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- json数据格式化展示时用过我认为就是可以识别\\n\\t等转义字符 -->\r\n            <!-- :class=\"['bdbottom']  每一行都绑定  i1===0 就是第一个位置 加上顶部边框线-->\r\n            <el-row\r\n              v-for=\"(item1, i1) in scope.row.children\"\r\n              :key=\"item1.id\"\r\n              :class=\"['bdbottom', i1 === 0 ? 'bdtop' : '', 'vcenter']\"\r\n            >\r\n              <!-- 渲染一级权限 -->\r\n              <el-col :span=\"5\">\r\n                <el-tag\r\n                  closable\r\n                  @close=\"removeRightById(scope.row, item1.id)\"\r\n                  >{{ item1.authName }}</el-tag\r\n                >\r\n                <i class=\"el-icon-caret-right\"></i>\r\n              </el-col>\r\n              <!-- 渲染一级到3级权限 -->\r\n              <el-col :span=\"19\">\r\n                <!-- 通过for渲染二级权限 -->\r\n                <el-row\r\n                  v-for=\"(item2, i2) in item1.children\"\r\n                  :key=\"item2.id\"\r\n                  :class=\"[i1 === 0 ? '' : 'bdtop', 'vcenter']\"\r\n                >\r\n                  <el-col :span=\"6\">\r\n                    <el-tag\r\n                      type=\"success\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item2.id)\"\r\n                      >{{ item2.authName }}</el-tag\r\n                    >\r\n                    <i class=\"el-icon-caret-right\"></i>\r\n                  </el-col>\r\n                  <el-col :span=\"18\">\r\n                    <el-tag\r\n                      type=\"warning\"\r\n                      v-for=\"(item3, i3) in item2.children\"\r\n                      :key=\"item3.id\"\r\n                      closable\r\n                      @close=\"removeRightById(scope.row, item3.id)\"\r\n                    >\r\n                      {{ item3.authName }}</el-tag\r\n                    >\r\n                  </el-col>\r\n                </el-row>\r\n              </el-col>\r\n            </el-row>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"300px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 编辑按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n              size=\"mini\"\r\n              @click=\"showEditDialog(scope.row.id)\"\r\n              >编辑</el-button\r\n            >\r\n            <!-- 删除按钮 -->\r\n            <el-button\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              size=\"mini\"\r\n              @click=\"removeRolesById(scope.row.id)\"\r\n              >删除</el-button\r\n            >\r\n            <!-- 分配角色 -->\r\n            <el-button\r\n              type=\"warning\"\r\n              icon=\"el-icon-setting\"\r\n              size=\"mini\"\r\n              @click=\"showSetRightDialog(scope.row)\"\r\n              >分配权限</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 添加角色角色 -->\r\n      <el-dialog\r\n        title=\"添加角色\"\r\n        :visible.sync=\"addRolesVisible\"\r\n        width=\"50%\"\r\n        @close=\"addRolesDialogClosed\"\r\n      >\r\n        <el-form\r\n          :model=\"addRolesForm\"\r\n          :rules=\"addRolesFormRules\"\r\n          ref=\"addRolesFormRef\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n            <el-input v-model=\"addRolesForm.roleName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n            <el-input v-model=\"addRolesForm.roleDesc\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addRolesVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addRoles\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 编辑角色对话框 -->\r\n      <el-dialog\r\n        title=\"提示\"\r\n        :visible.sync=\"editRolesVisible\"\r\n        width=\"50%\"\r\n        @close=\"editRolesDialogClosed\"\r\n      >\r\n        <el-form\r\n          :model=\"editRolesForm\"\r\n          :rules=\"addRolesFormRules\"\r\n          ref=\"editRolesFormRef\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n            <el-input v-model=\"editRolesForm.roleName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n            <el-input v-model=\"editRolesForm.roleDesc\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editRolesVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editRoles\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分配角色权限对话框 -->\r\n      <el-dialog\r\n        title=\"分配权限\"\r\n        :visible.sync=\"setRightDialogVisible\"\r\n        width=\"50%\"\r\n         @close=\"setRightDialogClosed\"\r\n      >\r\n        <!-- 树形控件 -->\r\n        <!-- default-expand-all 是否默认展开所有节点 default-checked-keys\t默认勾选的节点的 key 的数组\r\n      show-checkbox勾选框 -->\r\n        <el-tree\r\n          :data=\"rightslist\"\r\n          :props=\"treeProps\"\r\n          show-checkbox\r\n          node-key=\"id\"\r\n          default-expand-all\r\n          :default-checked-keys=\"defkeys\"\r\n          ref=\"treeRef\"\r\n        ></el-tree>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button\r\n          >\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //所有角色列表数据\r\n      rolelist: [],\r\n      //所有角色权限数据\r\n      rightslist: [],\r\n      //保存点击分配权限的id\r\n      roleId:'',\r\n      //树形控件的绑定对象\r\n      treeProps: {\r\n        //authName 权限说明\r\n        label: \"authName\",\r\n        //在那个里面嵌套\r\n        children: \"children\",\r\n      },\r\n      //树形控件的节点默认勾选的\r\n      defkeys: [],\r\n      //控制添加角色对话框显示隐藏\r\n      addRolesVisible: false,\r\n      //控制编辑角色对话框显示隐藏\r\n      editRolesVisible: false,\r\n      //控制分配角色权限对话框显示隐藏\r\n      setRightDialogVisible: false,\r\n      //添加用户表单数据\r\n      addRolesForm: {\r\n        roleName: \"\",\r\n        roleDesc: \"\",\r\n      },\r\n      //创建一个保存编辑的表单数据\r\n      editRolesForm: {},\r\n      //修改表单的验证规则对象\r\n      addRolesFormRules: {\r\n        roleName: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入角色名\", trigger: \"blur\" },\r\n          {\r\n            min: 2,\r\n            max: 10,\r\n            message: \"角色名的长度在2~10个字符之间\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        roleDesc: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"添加角色描述\", trigger: \"blur\" },\r\n          {\r\n            min: 0,\r\n            max: 50,\r\n            message: \"角色描述名的长度在0~50个字符之间\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getRolesList();\r\n  },\r\n  methods: {\r\n    //获取所有的角色列表\r\n    async getRolesList() {\r\n      const { data: res } = await this.$http.get(\"roles\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取列表失败\");\r\n      }\r\n      this.rolelist = res.data;\r\n      console.log(this.rolelist);\r\n    },\r\n    //根据id删除对应的角色信息\r\n    async removeRolesById(id) {\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该用户, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\"roles/\" + id);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除用户失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除用户成功\");\r\n      //重新获取用户列表\r\n      this.getRolesList();\r\n    },\r\n    // 点击按钮添加新用户\r\n    addRoles() {\r\n      this.$refs.addRolesFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\"roles\", this.addRolesForm);\r\n        if (res.data.status !== 201) {\r\n          this.$message.error(\"添加用户失败\");\r\n        }\r\n        this.$message.success(\"添加用户成功\");\r\n        //对话框隐藏\r\n        this.addDialogVisible = false;\r\n        //重新获取用户列表\r\n        this.getRolesList();\r\n      });\r\n    },\r\n    //添加角色对话框关闭事件\r\n    addRolesDialogClosed() {\r\n      //resetFields对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.addRolesFormRef.resetFields();\r\n    },\r\n    //监听修改角色对话框的关闭事件\r\n    editRolesDialogClosed() {\r\n      // resetFields\t对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.editRolesFormRef.resetFields();\r\n    },\r\n    // 展示编辑角色的对话框\r\n    async showEditDialog(id) {\r\n      this.editRolesVisible = true;\r\n      // 根据 ID 查询用户信息\r\n      const { data: res } = await this.$http.get(\"roles/\" + id);\r\n      //用if进行判断 用户请求成功还是失败\r\n      if (res.meta.status != 200) {\r\n        //失败提示\r\n        return this.$message.error(\"查询用户失败\");\r\n      }\r\n      this.editRolesForm = res.data;\r\n      console.log(\"1111111111\", this.editRolesForm.roleId);\r\n    },\r\n    //修改角色信息并且提交\r\n    editRoles() {\r\n      this.$refs.editRolesFormRef.validate(async (valid) => {\r\n        //打印为true,表示格式校验验证通过\r\n        console.log(this.editRolesForm);\r\n        // console.log(valid)\r\n        // //不通过直接结束\r\n        if (!valid) return;\r\n        //通过发起修改用户信息的请求\r\n        const { data: res } = await this.$http.put(\r\n          \"roles/\" + this.editRolesForm.roleId,\r\n          {\r\n            roleName: this.editRolesForm.roleName,\r\n            roleDesc: this.editRolesForm.roleDesc,\r\n          }\r\n        );\r\n        //先判断响应成功没有\r\n        console.log(res);\r\n        console.log(res.roleName);\r\n        console.log(res.roleDesc);\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"更新用户信息失败\");\r\n        }\r\n        //响应成功之后\r\n        //关闭对话框 刷新数据表 提示修改成功\r\n        this.editRolesVisible = false;\r\n        this.getRolesList();\r\n        this.$message.success(\"更新用户信息成功\");\r\n      });\r\n    },\r\n    //根据id删除对应的权限\r\n    //role 角色   id3 权限 ID\r\n    //删除指定的角色的id\r\n    async removeRightById(role, rightId) {\r\n      console.log(role, rightId);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该用户, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\r\n        `roles/${role.id}/rights/${rightId}`\r\n      );\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除用户失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除用户成功\");\r\n      //重新获取用户列表\r\n      //this.getRolesList();不推荐因为他是刷新整个页面\r\n      // this.getRolesList();\r\n      //因为返回的data, 是当前角色下最新的权限数据\r\n      //角色id下数据重新渲染 res.data用户最新数据   role.children 指定用户下的数据\r\n      role.children = res.data;\r\n    },\r\n    //展示分配权限的对话框\r\n    async showSetRightDialog(role) {\r\n      console.log(role);\r\n      //保存当前角色id 以后分配权限好用\r\n      this.roleId=role.id\r\n      //获取所有的权限数据\r\n      //获取用户所有的权限的数据\r\n      //值 list 或 tree , list 列表显示权限, tree 树状显示权限\r\n      const { data: res } = await this.$http.get(\"rights/tree\");\r\n      if (res.meta.status !== 200) {\r\n        //提示\r\n        return this.$message.error(\"获取列表失败\");\r\n      }\r\n      //获取的权限数据 用空数组保存\r\n      this.rightslist = res.data;\r\n      console.log(this.rightslist);\r\n      // 递归获取3级节点的id role当前角色 this.defkeys data申明的空数组\r\n      this.getLeafkeys(role, this.defkeys);\r\n         this.getRolesList();\r\n      //对话框显示\r\n      this.setRightDialogVisible = true;\r\n       //重新获取用户列表\r\n\r\n    },\r\n    //用递归的形式,获取角色下面所有的3级权限的id,并保存到defkeys\r\n    //node 节点  arr 数组保存\r\n    getLeafkeys(node, arr) {\r\n      // 判断每个节点是否有children 没有就是最后一个 也就是第3级\r\n      if (!node.children) {\r\n        //arr表示数组 push往后添加 node.id 就是拥有的id\r\n        return arr.push(node.id);\r\n      }\r\n      //如果有children 就一直自己调自己 找到没有children才结束 item节点\r\n      node.children.forEach((item) => {\r\n        return this.getLeafkeys(item, arr);\r\n      });\r\n    },\r\n    //解决点击时候数组里面的值累加 关闭对话框defKeys保存的值清零\r\n    // 监听分配权限对话框的关闭事件 \r\n    setRightDialogClosed() {\r\n      this.defkeys= []\r\n    },\r\n    //点击角色分配权限\r\n    async allotRights(){\r\n      // 获取已经选择的id数组 \r\n      //因为this.$refs.treeRef.getCheckedKeys()是个数组所以用...打开\r\n      // getCheckedKeys 若节点可被选择（即 show-checkbox 为 true），则返回目前被选中的节点的 key 所组成的数组\r\n      //getHalfCheckedNodes 若节点可被选择（即 show-checkbox 为 true），则返回目前半选中的节点所key组成的数组\r\n      const keys=[...this.$refs.treeRef.getCheckedKeys(),...this.$refs.treeRef.getHalfCheckedKeys()]\r\n      console.log(keys);\r\n      //中间用 ,拼接\r\n      const idStr=keys.join(',')\r\n      // console.log(idStr);\r\n      const{data:res}= await this.$http.post(`roles/${this.roleId}/rights`,{rids:idStr})\r\n      if (res.meta.status !== 200) {\r\n        //提示\r\n        return this.$message.error(\"分配权限失败\");\r\n      }\r\n       //提示\r\n      this.$message.success(\"分配权限成功\");\r\n      //刷新列表\r\n       this.getRolesList();\r\n       //对话框隐藏\r\n       this.setRightDialogVisible = false\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-tag {\r\n  margin: 7px;\r\n}\r\n.bdtop {\r\n  border-top: 1px solid #eee;\r\n}\r\n.bdbottom {\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.vcenter {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n}\r\n</style>"]}]}