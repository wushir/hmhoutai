{"remainingRequest":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\src\\components\\goods\\Categories.vue?vue&type=style&index=0&id=8cf3e7b6&lang=ss&scoped=true&","dependencies":[{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\src\\components\\goods\\Categories.vue","mtime":1643459879496},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zhoutao\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudHJlZVRhYmxlew0KICBtYXJnaW4tdG9wOiAxNXB4Ow0KfQ0K"},{"version":3,"sources":["Categories.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA","file":"Categories.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <!-- 添加分类按钮 -->\r\n      <el-button type=\"primary\">添加分类</el-button>\r\n      <!-- 表格 -->\r\n      <!-- :data 接收表格数据源  columns 表格各列的配置 selection-type选择框\r\n        expand-type 前面展开箭头 show-index是否显示数据编号 index-text 数据编号名称\r\n        border是否显示纵向边框 show-row-hover鼠标悬停时，是否高亮当前行-->\r\n      <tree-table class=\"treeTable\" :data=\"catelist\" :columns=\"columns\" :selection-type=\"false\"\r\n        :expand-type=\"false\" :show-index=\"true\" index-text=\"id\" border \r\n        :show-row-hover=\"false\">\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <!-- 判断删除没有scope.row.cat_deleted==false -->\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted == false\" style=\"color: lightgreen\" ></i>\r\n          <i class=\"el-icon-error\" style=\"color: red\" v-else></i>\r\n        </template>\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <!-- 判断删除没有scope.row.cat_deleted==false -->\r\n          <el-tag v-if=\"scope.row.cat_level == 0\" size=\"mini\">一级</el-tag>\r\n          <el-tag v-if=\"scope.row.cat_level == 1\" size=\"mini\" type=\"success\">二级</el-tag>\r\n          <el-tag v-if=\"scope.row.cat_level == 2\" size=\"mini\" type=\"warning\">三级</el-tag>\r\n        </template>\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <!-- 判断删除没有scope.row.cat_deleted==false -->\r\n          <!-- 编辑按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            size=\"mini\"\r\n            @click=\"showEditDialog(scope.row.cat_id)\"\r\n            >编辑\r\n          </el-button >\r\n          <!-- 删除按钮 -->\r\n          <el-button\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n            size=\"mini\"\r\n            @click=\"removeRolesById(scope.row.cat_id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"querInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"querInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //查询条件\r\n      querInfo: {\r\n        // 三层分类列表\r\n        type: 3,\r\n        // 当前页码值\r\n        pagenum: 1,\r\n        // 每页显示多少条数据\r\n        pagesize: 5,\r\n      },\r\n      //商品分类数据列表默认为空\r\n      catelist: [],\r\n      //总数据条数\r\n      total: \"\",\r\n      columns: [\r\n        {\r\n          label: \"分类名称\",\r\n          prop: \"cat_name\",\r\n        },\r\n        {\r\n          label: \"是否有效\",\r\n          //定义为自定义模板\r\n          type: \"template\",\r\n          // 模板名字\r\n          template: \"isok\",\r\n        },\r\n        {\r\n          label: \"排序\",\r\n          //定义为自定义模板\r\n          type: \"template\",\r\n          // 模板名字\r\n          template: \"order\",\r\n        },\r\n        {\r\n          label: \"操作\",\r\n          //定义为自定义模板\r\n          type: \"template\",\r\n          // 模板名字\r\n          template: \"opt\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      //参数1 接口地址 参数2 请求参数\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: this.querInfo,\r\n      });\r\n      //   console.log(res);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"获取商品分类失败\");\r\n      }\r\n      console.log(res.data);\r\n      //把数据赋值给catelist\r\n      this.catelist = res.data.result;\r\n      //   为总数据条数赋值\r\n      this.total = res.data.total;\r\n    },\r\n    //根据id删除对应的角色信息\r\n    async removeRolesById(id) {\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该商品分类列表, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      //如果确认删除 返回confirm\r\n      //取消删除 返回cancel\r\n      console.log(confirmResult);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\"categories/\" + id);\r\n      if (res.meta.status != 200) {\r\n        //响应错误提示\r\n        return this.$message.error(\"删除该商品分类列表失败\");\r\n      }\r\n      //成功弹出\r\n      this.$message.success(\"删除该商品分类列表成功\");\r\n      //重新获取商品分类列表\r\n      role.children = res.data;\r\n    },\r\n    //监听pagesize 就是每次显示多少条\r\n    handleSizeChange(newSize){\r\n      //这个querInfo里面的pagesize\r\n      this.querInfo.pagesize=newSize\r\n      this.getCateList();\r\n    },\r\n    //监听pagesize,每次触发拿到新的页码值\r\n    handleCurrentChange(newPage){\r\n       this.querInfo.pagenum=newPage\r\n      this.getCateList();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"ss\" scoped>\r\n.treeTable{\r\n  margin-top: 15px;\r\n}\r\n</style>"]}]}