{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\src\\components\\user\\Users.vue","mtime":1643132564000},{"path":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642648944000},{"path":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1642648952000},{"path":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642648944000},{"path":"C:\\Users\\Administrator\\Desktop\\houtai\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1642648952000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <!-- 搜索 -->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <!-- v-model=\"queryInfo.query\" 获取用户输入的值  \r\n           clearable清空 @clear=\"getUserlist\"点击清空后重新获取-->\r\n          <el-input\r\n            placeholder=\"请输入内容\"\r\n            v-model=\"queryInfo.query\"\r\n            clearable\r\n            @clear=\"getUserlist\"\r\n          >\r\n            <el-button\r\n              slot=\"append\"\r\n              icon=\"el-icon-search\"\r\n              @click=\"getUserlist\"\r\n            ></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\"\r\n            >添加用户</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格 -->\r\n      <el-table :data=\"userlist\" border stripe>\r\n        <el-table-column type=\"index\" label=\"id\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"mobile\" label=\"手机号\"> </el-table-column>\r\n        <el-table-column prop=\"create_time\" label=\"创建时间\"> </el-table-column>\r\n        <el-table-column prop=\"role_name\" label=\"权限\"> </el-table-column>\r\n        <el-table-column label=\"状态\">\r\n          <!-- slot-scope=\"scope\" 来取得作用域插槽:data绑定的数据，scope可以随便替换其他名称，\r\n         只是定义对象来代表取得的data数据，便于使用 -->\r\n          <!-- scope.row 获取当前行所有数据-->\r\n          <!-- template模板插糟 -->\r\n          <template slot-scope=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.mg_state\"\r\n              @change=\"userStateChanged(scope.row)\"\r\n            >\r\n            </el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180px\" class=\"caozuo\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n             size=\"mini\"\r\n              @click=\"showEditDialog(scope.row.id)\"\r\n            ></el-button>\r\n            <!-- 删除按钮 -->\r\n            <el-button\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              size=\"mini\"\r\n              @click=\"removeUserById(scope.row.id)\"\r\n            ></el-button>\r\n            <!-- 分配角色 -->\r\n            <el-tooltip\r\n              class=\"item\"\r\n              effect=\"dark\"\r\n              content=\"分配权限\"\r\n              placement=\"top\"\r\n              :enterable=\"false\"\r\n            >\r\n              <el-button\r\n                type=\"warning\"\r\n                icon=\"el-icon-setting\"\r\n               size=\"mini\"\r\n              ></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n    <!-- 添加用户的对话框 -->\r\n    <!-- :visible.sync=\"addDialogVisible\"控制对话框显示隐藏 -->\r\n    <el-dialog\r\n      title=\"添加用户\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <!-- 内容主体区 -->\r\n      <!-- :model=\"addForm\" 表单数据\r\n       :rules=\"addFormRules\"验证规则\r\n       -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"addForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"addForm.password\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"addForm.email\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"mobile\">\r\n          <el-input v-model=\"addForm.mobile\" clearable></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addUser\">\r\n          确 定</el-button\r\n        >\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改用户的对话框 -->\r\n     <el-dialog\r\n      title=\"修改用户\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\" @close=\"editDialogClosed\"\r\n    >\r\n      <!-- 内容主体区 -->\r\n      <!-- :model=\"addForm\" 表单数据\r\n       :rules=\"addFormRules\"验证规则\r\n       -->\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"editForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"editForm.email\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"mobile\">\r\n          <el-input v-model=\"editForm.mobile\" clearable></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editUser\">\r\n          确 定</el-button\r\n        >\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    // 校验邮箱的规则\r\n    var checkEmail = (rule, value, cb) => {\r\n      // 验证邮箱的正则表达式\r\n     const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n      // 如果验证邮箱正确，返回回调函数，输入框显示绿色\r\n      if (regEmail.test(value)) {\r\n        // 合法的邮箱\r\n        return cb()\r\n      }\r\n      // 如果验证不正确\r\n      cb(new Error('请输入合法的邮箱'))\r\n    };\r\n    // 校验手机号的规则\r\n    var checkMobile = (rule, value, cb) => {\r\n      // 验证手机号的正则表达式\r\n     const regMobile =/^(((13[0-9]{1})|(14[0-9]{1})|(15[0-9]{1})|(16[0-9]{1})|(17[0-9]{1})|(19[0-9]{1})|(18[0-9]{1}))+\\d{8})$/\r\n      // 如果验证手机号正确，返回回调函数，输入框显示绿色\r\n      if (regMobile.test(value)) {\r\n        return cb()\r\n      }\r\n      // 如果验证不正确\r\n      cb(new Error(\"请输入合法的手机号\"))\r\n    };\r\n    return {\r\n      //获取用户列表的参数\r\n      queryInfo: {\r\n        query: \"\",\r\n        //当前页数\r\n        pagenum: 1,\r\n        //每页显示多少条\r\n        pagesize: 2,\r\n        //搜索输入框里面的值\r\n      },\r\n      //保存用户列表\r\n      userlist: [],\r\n      //保存总数据条数\r\n      total: 0,\r\n      //控制对话框显示隐藏\r\n      addDialogVisible: false,\r\n      //控制修改用户对话框显示隐藏\r\n     editDialogVisible: false,\r\n      //添加用户表单数据\r\n      addForm: {\r\n        username:'',\r\n        password:'',\r\n        email:'',\r\n        mobile:'',\r\n      },\r\n      //查询用户表单信息对象\r\n      editForm: {\r\n        // username:'',\r\n        // password:'',\r\n        // email:'',\r\n        // mobile:'',\r\n      },\r\n      //修改表单的验证规则对象\r\n      editFormRules:{\r\n        username: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { min: 3, max: 10, message: \"用户名的长度在3~10个字符之间\",trigger: \"blur\" },\r\n        ],\r\n        //验证密码是否合法\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          {\r\n            min: 6,\r\n            max: 15,\r\n            message: \"长度在 6 到 15 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { validator: checkMobile, }\r\n        ]\r\n      },\r\n      //添加用户表单验证规则\r\n      addFormRules: {\r\n        username: [\r\n          //trigger: \"blur\"失去焦点\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { min: 3, max: 10, message: \"用户名的长度在3~10个字符之间\",trigger: \"blur\" },\r\n        ],\r\n        //验证密码是否合法\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          {\r\n            min: 6,\r\n            max: 15,\r\n            message: \"长度在 6 到 15 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { validator: checkMobile, }\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getUserlist();\r\n  },\r\n  methods: {\r\n    async getUserlist() {\r\n      //users接口 this.queryInfo参数 params别名\r\n      const { data: res } = await this.$http.get(\"users\", {\r\n        params: this.queryInfo,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取用户列表失败\");\r\n      }\r\n      //保存用户列表\r\n      this.userlist = res.data.users;\r\n      //保存总数据条数\r\n      this.total = res.data.total;\r\n      console.log(this.total);\r\n    },\r\n    //监听pagesize改变的事件\r\n    handleSizeChange(newSize) {\r\n      // console.log(11111,newSize);\r\n      this.queryInfo.pagesize = newSize;\r\n      this.getUserlist();\r\n    },\r\n    //监听页码值改变的事件\r\n    handleCurrentChange(newPage) {\r\n      //  console.log(newPage);\r\n      this.queryInfo.pagenum = newPage;\r\n      this.getUserlist();\r\n    },\r\n    //监听switch开关状态的改变\r\n    async userStateChanged(userinfo) {\r\n      console.log(userinfo);\r\n      const { data: res } = await this.$http.put(\r\n        `users/${userinfo.id}/state/${userinfo.mg_state}`\r\n      );\r\n      //判断状态码响应成功没有\r\n      if (res.meta.status !== 200) {\r\n        //把状态变成原样,并提示更新用户状态失败\r\n        userinfo.mg_state = !userinfo.mg_state;\r\n        return this.$message.error(\"更新用户状态失败\");\r\n      }\r\n      //提示成功\r\n      this.$message.success(\"更新用户状态成功\");\r\n    },\r\n    //添加对话框关闭事件\r\n    addDialogClosed() {\r\n      //resetFields对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n    // 点击按钮添加新用户\r\n    addUser() {\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\"users\", this.addForm);\r\n        if (res.data.status !== 201) {\r\n          this.$message.error(\"添加用户失败\");\r\n        }\r\n        this.$message.success(\"添加用户成功\");\r\n        //对话框隐藏\r\n        this.addDialogVisible = false;\r\n        //重新获取用户列表\r\n        this.getUserlist();\r\n      });\r\n    },\r\n    // 展示编辑用户的对话框\r\n    async showEditDialog(id){\r\n       this.editDialogVisible=true\r\n        // 根据 ID 查询用户信息\r\n       const {data:res}=await this.$http.get('users/'+id)\r\n       //用if进行判断 用户请求成功还是失败\r\n       if(res.meta.status !=200){\r\n         //失败提示\r\n         return this.$message.error('查询用户失败')\r\n       }\r\n       this.editForm=res.data\r\n    },\r\n    //监听修改用户对话框的关闭事件\r\n    editDialogClosed(){\r\n      // resetFields\t对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    //修改用户信息并且提交\r\n    editUser(){\r\n      this.$refs.editFormRef.validate( async valid=>{\r\n        //打印为true,表示格式校验验证通过\r\n        console.log(this.editForm);\r\n        //不通过直接结束\r\n        if(!valid) return\r\n        //通过发起修改用户信息的请求\r\n         const {data:res}=await this.$http.put('users/'+this.editForm.id,{\r\n          email:this.editForm.email,\r\n          mobile:this.editForm.mobile\r\n        })\r\n        //先判断响应成功没有\r\n        if(res.meta.status !==200){\r\n          return this.$message.error('更新用户信息失败')\r\n        }\r\n        //响应成功之后\r\n        //关闭对话框 刷新数据表 提示修改成功\r\n        this.editDialogVisible=false\r\n        this.getUserlist()\r\n         this.$message.success('更新用户信息成功')\r\n      })\r\n    },\r\n    //根据id删除对应的用户信息\r\n    async removeUserById(id){\r\n      console.log(id);\r\n      //弹框提示\r\n      const confirmResult =await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err=>err); \r\n        //如果确认删除 返回confirm\r\n        //取消删除 返回cancel\r\n        console.log (confirmResult);\r\n        if(confirmResult !==\"confirm\"){\r\n          return this.$message.info('已经取消删除')\r\n        }\r\n        const {data:res}=await this.$http.delete('users/'+id)\r\n        if(res.meta.status!=200){\r\n          //响应错误提示\r\n          return this.$message.error('删除用户失败')\r\n        }\r\n        //成功弹出\r\n        this.$message.success('删除用户成功')\r\n        //重新获取用户列表\r\n        this.getUserlist();\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped >\r\n</style>"]}]}